services:
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    profiles:
      - redis

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: llm_backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    profiles:
      - postgres

  web:
    build: .
    ports:
      - "8811:8811"
    environment:
      - PYTHONPATH=/app/src
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/llm_backend}
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - WEBSOCKET_API_KEY=${WEBSOCKET_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TOGETHER_AI_API_TOKEN=${TOGETHER_AI_API_TOKEN}
      - TOGETHERAI_API_KEY=${TOGETHERAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - CORE_API_URL=${CORE_API_URL}
      - TOHJU_NODE_API=${TOHJU_NODE_API}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - COUCHDB_URL=${COUCHDB_URL}
    volumes:
      - ./src:/app/src:ro
    command: poetry run fastapi dev src/main.py --host 0.0.0.0 --port 8811

  worker:
    build: .
    environment:
      - PYTHONPATH=/app/src
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/llm_backend}
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - WEBSOCKET_API_KEY=${WEBSOCKET_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TOGETHER_AI_API_TOKEN=${TOGETHER_AI_API_TOKEN}
      - TOGETHERAI_API_KEY=${TOGETHERAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - CORE_API_URL=${CORE_API_URL}
      - TOHJU_NODE_API=${TOHJU_NODE_API}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - COUCHDB_URL=${COUCHDB_URL}
    volumes:
      - ./src:/app/src:ro
    command: poetry run python -m llm_backend.workers.worker

  # Redis-dependent versions (when using Docker Redis)
  web-with-redis:
    extends: web
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/llm_backend
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - WEBSOCKET_API_KEY=${WEBSOCKET_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TOGETHER_AI_API_TOKEN=${TOGETHER_AI_API_TOKEN}
      - TOGETHERAI_API_KEY=${TOGETHERAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - CORE_API_URL=${CORE_API_URL}
      - TOHJU_NODE_API=${TOHJU_NODE_API}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - COUCHDB_URL=${COUCHDB_URL}
      - SESSION_API_M2M_TOKEN=${SESSION_API_M2M_TOKEN}
    profiles:
      - redis

  worker-with-redis:
    extends: worker
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/llm_backend
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - WEBSOCKET_API_KEY=${WEBSOCKET_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TOGETHER_AI_API_TOKEN=${TOGETHER_AI_API_TOKEN}
      - TOGETHERAI_API_KEY=${TOGETHERAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - CORE_API_URL=${CORE_API_URL}
      - TOHJU_NODE_API=${TOHJU_NODE_API}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - COUCHDB_URL=${COUCHDB_URL}
      - SESSION_API_M2M_TOKEN=${SESSION_API_M2M_TOKEN}
    profiles:
      - redis

volumes:
  redis_data:
  postgres_data:
