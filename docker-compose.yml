version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: llm_backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/llm_backend
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - WEBSOCKET_API_KEY=${WEBSOCKET_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: poetry run fastapi run src/main.py --host 0.0.0.0 --port 8000

  worker:
    build: .
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/llm_backend
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - WEBSOCKET_API_KEY=${WEBSOCKET_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: poetry run python -m llm_backend.workers.worker
    deploy:
      replicas: 2

volumes:
  redis_data:
  postgres_data:
